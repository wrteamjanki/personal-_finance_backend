"""init

Revision ID: b6a36209b607
Revises: 
Create Date: 2025-06-02 11:57:39.788703

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b6a36209b607'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### safer DROP commands with IF EXISTS ###
    op.execute("DROP TABLE IF EXISTS chat_assistant_settings CASCADE;")
    op.execute("DROP INDEX IF EXISTS ix_users_email;")
    op.execute("DROP TABLE IF EXISTS users CASCADE;")
    op.execute("DROP INDEX IF EXISTS ix_setting_groups_name;")
    op.execute("DROP TABLE IF EXISTS setting_groups CASCADE;")
    op.execute("DROP TABLE IF EXISTS contents CASCADE;")
    op.execute("DROP TABLE IF EXISTS chat_messages CASCADE;")
    op.execute("DROP TABLE IF EXISTS tag_contents CASCADE;")
    op.execute("DROP TABLE IF EXISTS tag_chat_message_link CASCADE;")
    op.execute("DROP TABLE IF EXISTS content_chat_message_link CASCADE;")
    op.execute("DROP TABLE IF EXISTS knowledge_documents CASCADE;")
    op.execute("DROP INDEX IF EXISTS ix_settings_key;")
    op.execute("DROP TABLE IF EXISTS settings CASCADE;")
    op.execute("DROP TABLE IF EXISTS tags CASCADE;")
    op.execute("DROP TABLE IF EXISTS chat_sessions CASCADE;")
    # ### end safer DROP commands ###

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_sessions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('session_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='chat_sessions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tags',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ai_generated', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tags_pkey'),
    sa.UniqueConstraint('name', name='tags_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('settings',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('key', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data_type', postgresql.ENUM('STRING', 'INT', 'FLOAT', 'BOOL', 'HTML', 'URL', name='settingdatatype'), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['setting_groups.id'], name=op.f('settings_group_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('settings_pkey'))
    )
    op.create_index(op.f('ix_settings_key'), 'settings', ['key'], unique=True)
    op.create_table('knowledge_documents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(length=1024), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='knowledge_documents_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('content_chat_message_link',
    sa.Column('chat_message_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('content_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['chat_message_id'], ['chat_messages.id'], name=op.f('content_chat_message_link_chat_message_id_fkey')),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], name=op.f('content_chat_message_link_content_id_fkey')),
    sa.PrimaryKeyConstraint('chat_message_id', 'content_id', name=op.f('content_chat_message_link_pkey'))
    )
    op.create_table('tag_chat_message_link',
    sa.Column('chat_message_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['chat_message_id'], ['chat_messages.id'], name=op.f('tag_chat_message_link_chat_message_id_fkey')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('tag_chat_message_link_tag_id_fkey')),
    sa.PrimaryKeyConstraint('chat_message_id', 'tag_id', name=op.f('tag_chat_message_link_pkey'))
    )
    op.create_table('tag_contents',
    sa.Column('tag_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('content_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], name=op.f('tag_contents_content_id_fkey')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('tag_contents_tag_id_fkey')),
    sa.PrimaryKeyConstraint('tag_id', 'content_id', name=op.f('tag_contents_pkey'))
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('query', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('response_from_llm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('response_latency', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_useful', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('chat_session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('language_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], name=op.f('chat_messages_chat_session_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('chat_messages_pkey'))
    )
    op.create_table('contents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['knowledge_documents.id'], name=op.f('contents_document_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('contents_pkey'))
    )
    op.create_table('setting_groups',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('setting_groups_pkey'))
    )
    op.create_index(op.f('ix_setting_groups_name'), 'setting_groups', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('chat_assistant_settings',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rank', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('chat_assistant_settings_pkey')),
    sa.UniqueConstraint('name', name=op.f('chat_assistant_settings_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
